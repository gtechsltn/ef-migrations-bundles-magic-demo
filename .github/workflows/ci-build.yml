name: CI/CD Example

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    name: Build & Store Migrations
    env:
      simpleproject-path: '.\src\SimpleEntityFrameworkWeb\SimpleEntityFrameworkWeb.csproj'
  
    steps:
    # Checkout the code, using fetch-depth 0 for gitVersion support
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Ensure that .NET is installed
    - name: Ensure .NET Installed
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    # Ensure that we have EF Core Tooling as it is not included by default
    # Pinning this version, just in case
    - name: Install EF Tools
      run: dotnet tool install --global dotnet-ef --version 8.0.8
    
    # Restore & Build, doing this for performance purposes
    - name: Restore Packages
      run: dotnet restore "${{ env.simpleproject-path }}"
    - name: Build
      run: dotnet build "${{ env.simpleproject-path }}" --no-restore --configuration Release
    
    # Scripting, generates a single migration file
    - name: Script EF Core
      run: dotnet ef migrations script -p "${{ env.simpleproject-path }}" -o ./deploy-script.sql --configuration Release -i --no-build
    
    
    # Find & Save the deployment script that we created
    - name: Store SQL Artifacts
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: migration-script
        path: deploy-script.sql
        retention-days: 1 # only need long enough to test/validate
